# Define a build argument to choose architecture
ARG BASE_ARCH=AMD64

# Define the base image dynamically
FROM mcr.microsoft.com/cosmosdb/ubuntu/documentdb-oss:22.04-PG16-${BASE_ARCH}-0.103.0 AS stage

# Install dependencies
RUN sudo apt-get update && \
    sudo apt-get install -y --no-install-recommends \
    jq curl sudo git make build-essential openssl pkg-config libssl-dev \
    && sudo rm -rf /var/lib/apt/lists/*

# Install rustup (which includes rustc and cargo) in user directory
ENV RUSTUP_HOME=/home/documentdb/.rustup \
    CARGO_HOME=/home/documentdb/.cargo \
    PATH=/home/documentdb/.cargo/bin:$PATH

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain stable

RUN rustc --version && cargo --version

USER documentdb
WORKDIR /home/documentdb/code

COPY . /home/documentdb/code

RUN sudo chown -R documentdb:documentdb /home/documentdb/code

WORKDIR /home/documentdb/code/pg_documentdb_gw

# Compile the code
RUN cargo build

#------------------------------------------------------------------------------------------------

# Same logic for the final image
ARG BASE_ARCH=AMD64
FROM mcr.microsoft.com/cosmosdb/ubuntu/documentdb-oss:22.04-PG16-${BASE_ARCH}-0.103.0 AS final

RUN sudo apt-get update && \
    sudo apt-get install -y --no-install-recommends \
    jq && \
    sudo rm -rf /var/lib/apt/lists/*

ENV LANGUAGE=en_US.UTF-8 \
    TERM=xterm-256color \
    ENFORCE_SSL=true \
    GATEWAY_PUBLIC_ENDPOINT="" \
    DOCUMENTDB_PORT=10260 \
    ENABLE_TELEMETRY=false \
    LOG_LEVEL=info \
    DATA_PATH="/home/documentdb/postgresql/data" \
    SCRIPT_DIR=/home/documentdb/code/scripts \
    ORIGINAL_USER="" \
    INSTALL_DEPENDENCIES_ROOT=/root/ \
    WORKSPACE_ROOT=/home/documentdb/code \
    CERTS_ROOT=/home/documentdb/code/scripts/certs \
    CERT_SECRET=secret \
    CUSTOM_USERNAME="documentdb_user"

RUN sudo mkdir /home/documentdb/gateway

COPY --from=stage /home/documentdb/code/pg_documentdb_gw/target/debug/documentdb_gateway /home/documentdb/gateway/documentdb_gateway
COPY --from=stage /home/documentdb/code/pg_documentdb_gw/SetupConfiguration.json /home/documentdb/gateway/SetupConfiguration.json
COPY --from=stage /home/documentdb/code/scripts/start_oss_server.sh /home/documentdb/gateway/scripts/start_oss_server.sh
COPY --from=stage /home/documentdb/code/scripts/build_and_start_gateway.sh /home/documentdb/gateway/scripts/build_and_start_gateway.sh
COPY --from=stage /home/documentdb/code/scripts/emulator_entrypoint.sh /home/documentdb/gateway/scripts/emulator_entrypoint.sh
COPY --from=stage /home/documentdb/code/scripts/utils.sh /home/documentdb/gateway/scripts/utils.sh
COPY --from=stage /home/documentdb/code/scripts/setup_psqlrc.sh /home/documentdb/gateway/scripts/setup_psqlrc.sh

RUN sudo chown -R documentdb:documentdb /home/documentdb/gateway

WORKDIR /home/documentdb/gateway/scripts
ENTRYPOINT ["/bin/bash", "-c", "/home/documentdb/gateway/scripts/emulator_entrypoint.sh \"$@\"", "--"]
