name: Gateway Image - Build and Push to GHCR (Native AMD64 and ARM64)

on:
  workflow_dispatch:
    inputs:
      manifest_tag:
        description: 'Tag for the Docker manifest'
        required: true
        default: 'test'
      base_version:
        description: 'Base version for the Docker image'
        required: true
        default: '0.103.0'

  push:
    branches:
      - 'main'
    paths-ignore:
      - '*.md'

permissions:
  packages: write
  contents: read

env:
  IMAGE_NAME: preview
  IMAGE_TAG: ${{ github.run_id }}-$(date +'%Y-%m-%d')

jobs:
  build-amd64:
    name: Build and Push AMD64
    runs-on: ubuntu-22.04  # Native AMD64 runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push AMD64 Image
      run: |
        TAG=${{ env.IMAGE_TAG }}-amd64
        docker build \
          --build-arg BASE_ARCH=AMD64 \
          --build-arg BASE_VERSION=${{ github.event.inputs.base_version }} \
          -t ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$TAG \
          -f .github/containers/Build-Ubuntu/Dockerfile_gateway .
        docker push ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$TAG

  build-arm64:
    name: Build and Push ARM64
    runs-on: ubuntu-22.04-arm  # Native ARM64 runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push ARM64 Image
      run: |
        TAG=${{ env.IMAGE_TAG }}-arm64
        docker build \
          --build-arg BASE_ARCH=ARM64 \
          --build-arg BASE_VERSION=${{ github.event.inputs.base_version }} \
          -t ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$TAG \
          -f .github/containers/Build-Ubuntu/Dockerfile_gateway .
        docker push ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$TAG

  create-manifest:
    name: Create and Push Manifest
    runs-on: ubuntu-22.04
    needs: 
      - build-amd64
      - build-arm64
    steps:
    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Create and Push Manifest
      run: |
        MANIFEST_TAG=${{ github.event.inputs.manifest_tag }}
        docker manifest create ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$MANIFEST_TAG \
          --amend ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64 \
          --amend ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
        docker manifest push ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:$MANIFEST_TAG


